{{- if .Values.minio.buckets }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-bucket-init
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "minio.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: bucket-init
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "minio.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: bucket-init
    spec:
      restartPolicy: Never
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: bucket-init
        image: minio/mc:latest
        command:
        - /bin/sh
        - -c
        - |
          set -e
          echo "Waiting for MinIO to be ready..."
          until mc alias set myminio http://{{ include "minio.fullname" . }}:9000 {{ .Values.minio.secret.user }} {{ .Values.minio.secret.password }}; do
            echo "Still waiting for MinIO..."
            sleep 5
          done
          echo "MinIO is ready. Creating buckets..."
          {{- range .Values.minio.buckets }}
          echo "Creating bucket: {{ . }}"
          mc mb myminio/{{ . }} || echo "Bucket {{ . }} may already exist"
          {{- end }}
          echo "Bucket creation completed successfully"
        env:
        - name: MC_CONFIG_DIR
          value: /tmp/.mc
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          seccompProfile:
            type: RuntimeDefault
{{- end }}
